version: "3"

vars:
  SIMULATE: true

  stow-packages:
    - src: fish
      folding: true
    - src: git
      folding: true
    - src: vim
      folding: true
    - src: vscode
      folding: true
    - src: wallpapers
      folding: true
    - src: wezterm
      folding: true
    - src: keepassxc
      folding: true

  root-packages:
    - src: nixos

  clone-repos:
    - remote: git@github.com:ic-it/dwm.git
      dst_dir: ~/dwm

tasks:
  setup:
    silent: true
    desc: Setup new IC-IT's Dotfiles. (stow dotfiles, install packages, clone dwm, etc.)
    cmds:
      - defer: { task: stash-current }
      - echo "Setting up IC-IT's Dotfiles"
      - echo "Stowing dotfiles..."
      - for: { var: stow-packages }
        cmd: echo "Stowing {{.ITEM.src}}..." &&
          stow {{ if .SIMULATE }}--simulate{{ end }} {{ if .ITEM.folding }}{{ else }}--no-folding{{ end }}
          --adopt
          --verbose
          --dotfiles
          --override=.*
          --target=$HOME {{.ITEM.src}}
      - echo "Clone repositories..."
      - for: { var: clone-repos }
        cmd: |
          if [ -d {{.ITEM.dst_dir}} ]; then 
            echo "Repository {{.ITEM.dst_dir}} already exists. Skipping..."; exit 0; 
          fi;
          echo "Cloning {{.ITEM.remote}} to {{.ITEM.dst_dir}}..." && {{ if .SIMULATE }}echo "Simulating..." && false && {{ end }}
          git clone {{ if .SIMULATE }}--no-checkout{{ end }} {{.ITEM.remote}} {{.ITEM.dst_dir}} {{ if .SIMULATE }} || true{{ end }}

  clean:
    silent: true
    desc: Clean up IC-IT's Dotfiles. (unstow dotfiles, remove packages, etc.)
    cmds:
      - echo "Cleaning up IC-IT's Dotfiles"
      - echo "Unstowing dotfiles..."
      - for: { var: stow-packages }
        cmd: |
          echo "Unstowing {{.ITEM.src}}..." &&
          stow {{ if .SIMULATE }}--simulate{{ end }} --delete --verbose --dotfiles --target=$HOME {{.ITEM.src}}
      - echo "Remove repositories..."
      - for: { var: clone-repos }
        cmd: |
          echo "Removing {{.ITEM.dst_dir}}..." && 
          {{ if .SIMULATE }}echo "Simulating..." && false &&{{ end }}
          rm -rf {{.ITEM.dst_dir}} {{ if .SIMULATE }} || true{{ end }}

  setup-root:
    silent: true
    desc: Setup root dotfiles
    cmds:
      - defer: { task: stash-current }
      - |
        {{ if .SIMULATE }}{{ else }} if [ "$(id -u)" -ne 0 ]; then echo "Please run this script as root."; exit 1; fi {{ end }}
      - echo "Setting up root dotfiles..."
      - echo "Rsycing root dotfiles..."
      - for: { var: root-packages }
        cmd: echo "Rsyncing {{.ITEM.src}}..." &&
          rsync {{ if .SIMULATE }} -n {{ end }}
          -avI {{.ITEM.src}}/ /

  stash-current:
    silent: true
    desc: Stash current changes
    internal: true
    vars:
      stashmsg: "Stashed by ic-it's dotfiles installer ($(date))"
    cmds:
      - echo "Stashing current changes..."
      - |
        {{ if .SIMULATE }}echo "Simulating..."{{ else }} git stash --all --include-untracked --message="{{.stashmsg}}" {{ end }}
